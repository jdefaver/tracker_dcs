[global_tags]
[agent]
  debug = false
  quiet = false

[[outputs.influxdb]]
    database = "trackerdcs"
    urls = ["http://localhost:8086"]

## CAEN

[[inputs.mqtt_consumer]]
  alias = "mqtt_caen_dcs"

  ## MQTT broker URLs to be used. The format should be scheme://host:port,
  ## schema can be tcp, ssl, or ws.
  servers = ["tcp://localhost:1883"]

  ## Topics that will be subscribed to.
  topics = ["dcs/status"]
  name_override = "dcs_status"
  json_string_fields = ["fsm_state"]
  data_format = "json"

[[inputs.mqtt_consumer]]
  alias = "mqtt_caen_channels"
  servers = ["tcp://localhost:1883"]
  topics = ["dcs/channels"]
  name_override = "channels"
  tag_keys = ["id", "module", "lv_board", "lv_channel", "hv_board", "hv_channel"]
  json_string_fields = ["fsm_state", "module"]
  data_format = "json"

[[processors.converter]]
  namepass = ["channels"]
  [processors.converter.fields]
    integer = ["lv_tripInt", "lv_tripExt", "lv_status", "hv_tripInt", "hv_tripExt", "hv_status", "hv_imRange", "hv_tripMode"]


## Chiller

[[inputs.mqtt_consumer]]
  alias = "mqtt_julabo_dcs"
  servers = ["tcp://localhost:1883"]
  topics = ["julabo/status"]
  name_override = "chiller"
  json_string_fields = ["fsm_state"]
  data_format = "json"

[[processors.converter]]
  namepass = ["chiller"]
  [processors.converter.fields]
    unsigned = ["status_code", "used_setpoint"]

## MARTA

[[inputs.mqtt_consumer]]
  alias = "mqtt_MARTA_dcs"
  servers = ["tcp://localhost:1883"]
  topics = ["MARTA/status"]
  name_override = "MARTA"
  json_string_fields = ["fsm_state"]
  data_format = "json"

[[processors.converter]]
  namepass = ["MARTA"]
  [processors.converter.fields]
    unsigned = ["status", "set_start_chiller", "set_start_co2", "set_flow_active", "set_alarm_reset"]



## Disco sensors

[[inputs.mqtt_consumer]]
  alias = "mqtt_disco"
  servers = ["tcp://localhost:1883"]
  topics = ["ESP01/sensors/#", "ESP02/sensors/#", "ESP03/sensors/#"]
  name_override = "sensors"
  data_format = "value"
  data_type = "float"

# Insert tag with sensor name
[[processors.override]]
  namepass = ["sensors"]
  [processors.override.tags]
    sensor = "ESP01"
  [processors.override.tagpass]
    topic = ["ESP01/*"]
[[processors.override]]
  namepass = ["sensors"]
  [processors.override.tags]
    sensor = "ESP02"
  [processors.override.tagpass]
    topic = ["ESP02/*"]
[[processors.override]]
  namepass = ["sensors"]
  [processors.override.tags]
    sensor = "ESP03"
  [processors.override.tagpass]
    topic = ["ESP03/*"]

# Rename field with measurement type
[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "DS_temp"
  [processors.rename.tagpass]
    topic = ["*/*/DS/temp"]

[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "BME_temp"
  [processors.rename.tagpass]
    topic = ["*/*/BME/temp"]
[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "BMI_humi"
  [processors.rename.tagpass]
    topic = ["*/*/BME/humi"]

[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "CCS_co2"
  [processors.rename.tagpass]
    topic = ["*/*/CCS/co2"]
[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "CCS_tvoc"
  [processors.rename.tagpass]
    topic = ["*/*/CCS/tvoc"]

[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "SCD30_co2"
  [processors.rename.tagpass]
    topic = ["*/*/SCD30/co2"]
[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "SCD30_temp"
  [processors.rename.tagpass]
    topic = ["*/*/SCD30/temp"]
[[processors.rename]]
  namepass = ["sensors"]
  [[processors.rename.replace]]
    field = "value"
    dest = "SCD30_humi"
  [processors.rename.tagpass]
    topic = ["*/*/SCD30/humi"]

[[aggregators.merge]]
  namepass = ["sensors"] # only pass sensor metric through aggregator
  drop_original = true
